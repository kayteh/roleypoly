/**
 * GENERATED FILE. This file was generated by @kayteh/bento. Editing it is a bad idea.
 * @generated
 */
import Bento, { IBentoTransport } from '@kayteh/bento'
export type ServerQuery = {
  id: string
}

export type RootServerItem = {
  url?: string
  name?: string
  members?: number
  roles?: number
}

export type RootServerOverview = {
  servers?: RootServerItem[]
}

export type ServerSlug = {
  id?: string
  name?: string
  ownerID?: string
  icon?: string
}

export interface IServersService {
  getServerSlug (ctx: any, request: ServerQuery): Promise<ServerSlug> | ServerSlug
  rootGetAllServers (ctx: any, request: void): Promise<RootServerOverview> | RootServerOverview
}
export class ServersClient {
  static __SERVICE__: string = 'Servers'
  constructor (private bento: Bento, private transport?: IBentoTransport) {}
  async getServerSlug (request: ServerQuery): Promise<ServerSlug> {
    return this.bento.makeRequest(this.transport || undefined, 'Servers', 'GetServerSlug', request)
  }
  async rootGetAllServers (request: void): Promise<RootServerOverview> {
    return this.bento.makeRequest(this.transport || undefined, 'Servers', 'RootGetAllServers', request)
  }
}
